####################################
# 指定当前环境，详情查看相关API
####################################
spring.profiles.active=dev

####################################
# spring boot security
####################################
logging.level.org.apache.ibatis=debug
logging.level.com.wtl=debug
logging.level.org.springframewor.security.web=debug

####################################
# http请求中文乱码
####################################
# spring.http.encoding.charset=utf-8
# spring.http.encoding.force=true
# spring.http.encoding.enabled=true

####################################
# mybatis映射配置
####################################
# 映射文件路径，支持ant风格的通配符，多个配置使用英文逗号隔开(classpath*:**/*Mapper.xml)
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
# 类型别名包配置，只能指定具体的包，多个配置用英文逗号隔开
mybatis.type-aliases-package=**.dto
# 自动将以下划线方式命名的数据库列名，映射到java对象的驼峰命名中，默认false
mybatis.configuration.map-underscore-to-camel-case=true
# 通用Mapper配置
mapper.mappers=com.wtl.base.Mapper
mapper.not-empty=false
mapper.identity=MYSQL
# mybatis分页插件配置（一般情况无需配置，直接使用即可）
pagehelper.helper-dialect=mysql
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true
pagehelper.params=count=countSql

####################################
# Druid
####################################
# 初始化连接大小[0]
spring.datasource.druid.initial-size=1
# 最小空闲连接数[0]
spring.datasource.druid.min-idle=1
# 最大连接数[8]
spring.datasource.druid.max-active=20

# 配置获取连接等待超时的时间(毫秒)[-1]
spring.datasource.druid.max-wait=60000
# 查询超时时间(秒)
spring.datasource.druid.query-timeout=90

# 用来检测连接是否有效的sql，要求是一个查询语句
spring.datasource.druid.validation-query=SELECT 'x'
# 申请连接时检测连接可用性[false]
spring.datasource.druid.test-on-borrow=false
# 归还连接检测[false]
spring.datasource.druid.test-on-return=false
# 超时是否检测连接可用性[true]
spring.datasource.druid.test-while-idle=true

# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接 (毫秒)
spring.datasource.druid.time-between-eviction-runs-millis=60000
#  配置一个连接在池中最小生存的时间(毫秒，默认30分钟)
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat；日志用的filter:log4j；防御sql注入的filter:wall
spring.datasource.druid.filters=stat,wall,slf4j
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true

# 是否缓存PreparedStatement. PSCache对支持游标的数据库性能提升巨大，比如说oracle.在mysql下建议关闭.
spring.datasource.druid.pool-prepared-statements=false
# 每个连接上PSCache的大小
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20

# StatViewServlet [https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_StatViewServlet%E9%85%8D%E7%BD%AE]
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 监控页面的用户名和密码
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin123
spring.datasource.druid.stat-view-servlet.reset-enable=false

# StatFilter [https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_StatFilter]
spring.datasource.druid.filter.stat.db-type=mysql
#慢SQL记录
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000
# SQL合并
spring.datasource.druid.filter.stat.merge-sql=false

# WallFilter [https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE-wallfilter]
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=mysql
spring.datasource.druid.filter.wall.config.delete-allow=false
spring.datasource.druid.filter.wall.config.drop-table-allow=false

####################################
# Cache Redis
####################################
spring.cache.type=redis
# redis数据库索引，默认为0
spring.redis.database=0
# redis服务器地址
spring.redis.host=127.0.0.1
# redis服务器连接端口
spring.redis.port=6379
# redis服务器连接密码，默认为空
spring.redis.password=
# 超时
spring.redis.timeout=0
# 连接池最大连接数，默认为8，使用负值表示没有限制
spring.redis.jedis.pool.max-active=8
# 连接池中最大空闲连接，默认为8
spring.redis.jedis.pool.max-idle=8
# 连接池最大阻塞等待时间，默认为-1，使用负值表示没有限制
spring.redis.lettuce.pool.max-wait=-1
# 连接池中最小空闲连接，默认为0
spring.redis.jedis.pool.min-idle=0
# Redis 存储根路径
# redis.root=redis

####################################
# Swagger
####################################
# 是否启用swagger，默认：true
# swagger.enabled=true
# 标题
# swagger.title="Spring Boot 测试使用 Swagger2 构建RESTful API"
# 维护人
# swagger.contact.name="wangtianlong"
# swagger.contact.email="wtl982097798@gmail.com"
# swagger.contact.url="https://www.xxx.cn"
# 版本
# swagger.version="1.0"
# 描述
# swagger.description="API 描述"
# swagger扫描的基础包，默认：全扫描
# swagger.base-package="com.wtl.system.controller"
# 需要处理的基础URL规则，默认：/**
# swagger.base-path=/**
# 需要排除的URL规则，默认：空
# exclude-path: ""
# swagger.license="Apache License, Version 2.0"
